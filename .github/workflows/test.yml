name: Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv (Unix)
        if: runner.os != 'Windows'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install uv (Windows)
        if: runner.os == 'Windows'
        run: |
          powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
          echo "$env:USERPROFILE\.cargo\bin" >> $env:GITHUB_PATH

      - name: Create virtual environment
        run: |
          uv venv

      - name: Install dependencies
        run: |
          uv pip install -e ".[dev]"

      - name: Run tests
        run: |
          # Run pytest in the test_project directory so tests are discovered
          uv run pytest test_project --cov=blizzardapi2 --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
