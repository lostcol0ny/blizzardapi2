[project]
name = "blizzardapi2"
version = "2.1.12"
description = "A Python wrapper for Blizzard API"
authors = [{ name = "lostcol0ny", email = "c098os0k@4wrd.cc" }]
license = "MIT"
readme = "README.md"
dependencies = [
    "requests>=2.32.3,<3.0.0",
    "black>=24.4.2,<26.0.0",
    "pytest>=8.2.2,<9.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "ruff>=0.3.0,<1.0.0",
    "pydantic>=2.11.6",
    "aiohttp>=3.12.12",
]
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["blizzardapi2*"]

[tool.setuptools_scm]
write_to = "blizzardapi2/_version.py"
local_scheme = "node-and-timestamp"

[project.optional-dependencies]
dev = [
    "pytest>=8.2.2,<9.0.0",
    "pytest-mock>=3.14.0,<4.0.0",
    "pytest-asyncio>=0.23.5,<2.0.0",
    "black>=24.4.2,<26.0.0",
    "ruff>=0.3.0,<1.0.0",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120

# Assume Python 3.11
target-version = "py311"

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
